##########################################################################################
####################################### MuonDBComparator #################################
##########################################################################################

* This code performs a comparison between two muon geometries and produces plots where the
  differences can be easily spotted.

* The code has 3 different parts:

	- ReadDBToRoofile: Reads muon alignment records and puts them into a
	  ROOT ntuple. (author and feedback to Pablo Martinez)
	- MakeDBComparison: Reads muon alignment records from a ROOT ntuple
	  and from a CMSSW database and produce an Ntuple with the comparison.
          (author and feedback to Pablo Martinez).   
	- AlignmentDeltaViewer: Reads the comparison and produces nice plots.
          (author and feedback to Gervasio Gomez).

* The code is not yet in CMSSW so the following instructions must be followed
  to install it.

	- Checkout the HEAD version of the code from the private CVS repository:
          cvs co -r HEAD UserCode/pablom/src/Alignment/MuonAlignment/

	- Build a CMSSW releases and checkout the MuonAlignment package also from the HEAD:

	----------------------------------------------------
	  #for example for CMSSW_3_7_1
	  cmsrel CMSSW_3_7_1
	  cd CMSSW_3_7_1/src
	  cmsenv
	  cvs co -r HEAD Alignment/MuonAlignment
	  cd Alignment/MuonAlignment/test
	----------------------------------------------------

        - Now copy the files from the private CVS repository checked out earlier. 
          In order to get also subdirectories such as ./RootViewer, 
          use 'cp -r', but first delete private CVS subdirectory! For example:

	------------------------------------------------------------
        rm -rf UserCode/pablom/src/Alignment/MuonAlignment/test/CVS
	cp -r  UserCode/pablom/src/Alignment/MuonAlignment/test/* .
	------------------------------------------------------------

	- Update the BuildFile.xml with the BuildFileaddendum
          (the code will NOT work otherwise, you must include the private code packages!)

        - Finally, compile:
        ----------------------------------------------------
        scramv1 b
        ----------------------------------------------------


* Detailed instructions:

==========================================================

* ReadDBToRootFile (cmsRun test-ReadDBToRootFile_cfg.py)

Takes a DB specified in the configuration file and dumps to a root file
the content of the DB. The input SQLite and output root filename are specified in the
configuration file. See the configuration file for examples.
The directory SQLites is meant to store input SQLite files.
The directory Output/Geometries is meant to store the output root geometries.

The structure of the output root files is a TTree with fields:

objId/I:subsys/I:rawId/L:id1/I:id2/I:id3/I:id4/I:id5/I:x/F:y/F:z/F:phix/F:phiy/F:phiz/F

objId: Alignable Id 
subsys: 1 for DT's, 2 for CSCs
rawId: CMSSW Id
id1-id5 has: wheel, station, sector, chamber, superlayer, layer for one DT and 
             endcap, station, ring, chamber, layer for one CSC. 

==========================================================

* MakeDBComparison (cmsRun test-MakeDBComparison_cfg.py)

Compares the geometry (in local and global coordinates) specified as input from
a root file (generated by ReadDBToRootFile), and a base SQLite geometry specified
once again in the configuration file (see examples in the configuration file itself).
The result is the diffenrece of SQLite geometry minus the root geometry. 
It then dumps the differences into a root file whose output name is also 
specified in the configuration file.

The directory SQLites is meant to store the input SQLite geometry.
The directory Output/Geometries is meant to store the input ROOT geometry.
The directory Output/Differences is meant to store the output of differences in root format.

The output root file is a TTree with the following fields:

"objId/I:subsys/I:rawId/L:id1/I:id2/I:id3/I:id4/I:id5/I:x/F:y/F:z/F:phix/F:phiy/F:phiz/F:dx/F:dy/F:dz/F:dphix/F:dphiy/F:dphiz/F:dxl/F:dyl/F:dzl/F:dphixl/F:dphiyl/F:dphizl/F"

Here the prefix "d" meand "difference" and the postfix "l" means "local coordinate". 

=================================================================================

* AlignmentDeltaViewer

This is a graphical utility to compare two alignment geometries.
It is in the RootViewer subdirectory.
It uses the following inputs:

1) 
Two text files with the nominal geometry descriptions called 

NominalGeometryDT.txt
NominalGeometryCSC.txt

used only to define the displayed DTs and CSCs.

2)
A root file which is obtained from Pablo's CMSSW tool and which contains
the differences between two given geometries.

Detailed instructions to run it are in the README_AlignmentDeltaViewer.txt
file in the RootViewer directory.


